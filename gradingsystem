<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Student Exam Registration Form</title>
<style>
    .form-container {
        width: 20%;
        margin: auto;
        padding: 20px;
        border: 1px solid #ccc;
        background-color: #00ffff; /* Aqua background for the form container */
    }

    body { font-family: Arial, sans-serif; }
    .form-container { width: 70%; margin: auto; padding: 20px; border: 1px solid #ccc; }
    label { display: block; margin-top: 10px;}
    input, select { width: 20%; padding: 8px; margin-top: 5px; display: inline-block; }
    span { margin-left: auto; width: 20px; display: inline-block; }
    button { padding: 10px 20px; margin-top: 20px; }

</style>
</head>
<body>
<div class="form-container">
        <h2>STUDENT ASSESSMENT</h2>
    <form>
        <label for="student_name">Student Name:</label>
        <input type="text" id="student_name" name="student_name">

        <label for="class">Class:</label>
        <input type="text" id="class" name="class">

        <!-- Core Subjects -->
        <label for="english">English:</label>
        <input type="number" id="english" name="english" oninput="updateGrade('english')">
        <span id="english_grade"></span>

        <label for="mathematics">Mathematics:</label>
        <input type="number" id="mathematics" name="mathematics" oninput="updateGrade('mathematics')">
        <span id="mathematics_grade"></span>

        <label for="science">Science:</label>
        <input type="number" id="science" name="science" oninput="updateGrade('science')">
        <span id="science_grade"></span>

        <label for="social">Social Studies:</label>
        <input type="number" id="social" name="social" oninput="updateGrade('social')">
        <span id="social_grade"></span>

        <!-- Elective Subjects -->
        <label for="computing">Computing:</label>
        <input type="number" id="computing" name="computing" oninput="updateGrade('computing')">
        <span id="computing_grade"></span>

        <label for="ghanaian_language">Ghanaian Language:</label>
        <input type="number" id="ghanaian_language" name="ghanaian_language" oninput="updateGrade('ghanaian_language')">
        <span id="ghanaian_language_grade"></span>

        <label for="rme">R.M.E:</label>
        <input type="number" id="rme" name="rme" oninput="updateGrade('rme')">
        <span id="rme_grade"></span>

        <label for="creative_art">Creative Art:</label>
        <input type="number" id="creative_art" name="creative_art" oninput="updateGrade('creative_art')">
        <span id="creative_art_grade"></span>

        <label for="career_technology">Career Technology:</label>
        <input type="number" id="career_technology" name="career_technology" oninput="updateGrade('career_technology')">
        <span id="career_technology_grade"></span>

        <label for="french">French:</label>
        <input type="number" id="french" name="french" oninput="updateGrade('french')">
        <span id="french_grade"></span>


        <label for="total">Total Score:</label>
        <input type="text" id="total" name="total" readonly>

        <label for="total_grade">Total Grades:</label>
        <input type="text" id="total_grade" name="total_grade" readonly>

        <button type="button" onclick="calculateTotal()">Calculate Total</button>
        <button type="button" onclick="generatePDF()">Generate PDF</button>
    </form>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
<script>
    function getGrade(score) {
        if (score >= 90) return '1';
        else if (score >= 80) return '2';
        else if (score >= 70) return '3';
        else if (score >= 60) return '4';
        else if (score >= 50) return '5';
        else if (score >= 40) return '6';
        else if (score >= 30) return '7';
        else if (score >= 20) return '8';
        else return '9';
    }

    function updateGrade(inputId) {
        const score = parseInt(document.getElementById(inputId).value, 10);
        if (!isNaN(score)) {
            document.getElementById(inputId + "_grade").textContent = getGrade(score);
        } else {
            document.getElementById(inputId + "_grade").textContent = "";
        }
    }

    function calculateTotal() {
        const coreSubjects = ['english', 'mathematics', 'science', 'social'];
        const electiveSubjects = ['creative_art', 'career_technology', 'computing', 'ghanaian_language', 'french', 'rme'];
        let totalScore = 0;
        let gradeSum = 0;

        coreSubjects.forEach(function(subject) {
            updateGrade(subject);
            const score = parseInt(document.getElementById(subject).value, 10);
            if (!isNaN(score)) {
                totalScore += score;
                gradeSum += parseInt(getGrade(score), 10);
            }
        });

        let electiveScores = [];
        electiveSubjects.forEach(function(subject) {
            updateGrade(subject);
            const score = parseInt(document.getElementById(subject).value, 10);
            if (!isNaN(score)) {
                totalScore += score;
                electiveScores.push(parseInt(getGrade(score), 10));
            }
        });

        electiveScores.sort((a, b) => a - b);
        const bestTwo = electiveScores.slice(0, 2);
        const bestTwoSum = bestTwo.reduce((a, b) => a + b, 0);

        document.getElementById('total').value = totalScore;
        document.getElementById('total_grade').value = gradeSum + bestTwoSum; // Sum of 4 core and 2 best elective grades
    }

</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
<script>
    function getGrade(score) {
        if (score >= 90) return '1';
        else if (score >= 80) return '2';
        else if (score >= 70) return '3';
        else if (score >= 60) return '4';
        else if (score >= 50) return '5';
        else if (score >= 40) return '6';
        else if (score >= 30) return '7';
        else if (score >= 20) return '8';
        else return '9';
    }

    function updateGrade(inputId) {
        const score = parseInt(document.getElementById(inputId).value, 10);
        if (!isNaN(score)) {
            document.getElementById(inputId + "_grade").textContent = getGrade(score);
        } else {
            document.getElementById(inputId + "_grade").textContent = "";
        }
    }

    function calculateTotal() {
        const coreSubjects = ['english', 'mathematics', 'science', 'social'];
        const electiveSubjects = ['creative_art', 'career_technology', 'computing', 'ghanaian_language', 'french', 'rme'];
        let totalScore = 0;
        let gradeSum = 0;

        coreSubjects.forEach(function(subject) {
            updateGrade(subject);
            const score = parseInt(document.getElementById(subject).value, 10);
            if (!isNaN(score)) {
                totalScore += score;
                gradeSum += parseInt(getGrade(score), 10);
            }
        });

        let electiveScores = [];
        electiveSubjects.forEach(function(subject) {
            updateGrade(subject);
            const score = parseInt(document.getElementById(subject).value, 10);
            if (!isNaN(score)) {
                totalScore += score;
                electiveScores.push(parseInt(getGrade(score), 10));
            }
        });

        electiveScores.sort((a, b) => a - b);
        const bestTwo = electiveScores.slice(0, 2);
        const bestTwoSum = bestTwo.reduce((a, b) => a + b, 0);

        document.getElementById('total').value = totalScore;
        document.getElementById('total_grade').value = gradeSum + bestTwoSum;
    }

    function generatePDF() {
        const { jsPDF } = window.jspdf;
        const doc = new jsPDF();
        const pageWidth = doc.internal.pageSize.getWidth();
        
        doc.setFontSize(12);

        const title = 'AKWABENGKROM D/A JHS STUDENTS EXAMS REPORT';
        const studentName = 'STUDENTS NAME: ' + (document.getElementById('student_name').value || "N/A");
        const className = 'CLASS: ' + (document.getElementById('class').value || "N/A");
        doc.setFont("helvetica", "bold");
        doc.text(title, pageWidth / 2, 10, 'center');
        doc.text(studentName, pageWidth / 2, 20, 'center');
        doc.text(className, pageWidth / 2, 30, 'center');

        // Set font to normal for other details
        doc.setFont("helvetica", "normal");

        // Creating a table
        let startY = 40;
        doc.text("SUBJECT", 14, startY);
        doc.text("SCORE", pageWidth / 2 - 30, startY);
        doc.text("GRADE", pageWidth / 2 + 30, startY);
        startY += 10;
        
        // Subjects with full names in uppercase
        const subjects = {
            'english': 'ENGLISH',
            'mathematics': 'MATHEMATICS',
            'science': 'SCIENCE',
            'social': 'SOCIAL STUDIES',
            'computing': 'COMPUTING',
            'ghanaian_language': 'GHANAIAN LANGUAGE',
            'rme': 'R.M.E',
            'creative_art': 'CREATIVE ART',
            'career_technology': 'CAREER TECHNOLOGY',
            'french': 'FRENCH'
        };

        // Set font for subject names
        doc.setFont("helvetica", "normal");
        doc.setFontSize(12);

        // Iterate over each subject and print its name, score, and grade
        Object.entries(subjects).forEach(([key, value]) => {
            const score = document.getElementById(key).value || 'N/A';
            const grade = document.getElementById(key + '_grade').textContent || 'N/A';
            doc.text(value, 14, startY); // Use the full name in uppercase
            doc.text(score, pageWidth / 2 - 30, startY);
            doc.text(grade, pageWidth / 2 + 30, startY);
            startY += 10; // Increment yPos for each new line
        });
    
function generatePDF() {
    const { jsPDF } = window.jspdf;
    const doc = new jsPDF();
    const pageWidth = doc.internal.pageSize.getWidth();
    
    // Load and add the school crest
    const crest = new Image();
    crest.src = 'C:\Users\cudjo\Desktop\examsweb/crest.png';  // Ensure this path is correct
    crest.onload = function() {
        // Assuming the size of the image should be 30x30 and placed at the top left of the PDF
        doc.addImage(this, 'JPEG', 10, 10, 30, 30);  // Adjust x, y, width, and height as needed

        // Continue adding other PDF elements after the image
        doc.setFontSize(12);
        doc.setFont("helvetica", "bold");
        const title = 'AKWABENGKROM D/A JHS STUDENT EXAMS REPORT';
        doc.text(title, pageWidth / 2, 50, 'center');  // Adjust y-position as needed to account for the image

        // Example: Add student name and class below the title
        const studentName = 'STUDENTS NAME: ' + (document.getElementById('student_name').value || "N/A");
        const className = 'CLASS: ' + (document.getElementById('class').value || "N/A");
        doc.text(studentName, pageWidth / 2, 60, 'center'); // Adjust these y-coordinates as necessary
        doc.text(className, pageWidth / 2, 70, 'center');

        // Save the PDF
        doc.save('student_report_card.pdf');
    };
    crest.onerror = function() {
        console.error('Error loading the crest image.');
        alert('Failed to load crest image, please check the file path.');
    }
}





        // Footer total scores and grades
        doc.text('TOTAL SCORE: ' + (document.getElementById('total').value || "N/A"), 14, startY + 10);
        doc.text('TOTAL GRADES: ' + (document.getElementById('total_grade').value || "N/A"), 14, startY + 20);

        doc.save('registration_form.pdf');
    }


</script>


</body>
</html>
